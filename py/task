# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. Затем пользователь вводит сами элементы множеств.

def merge_sort(nums):
if len(nums) > 1:
 mid = len(nums) // 2
 m = nums[:mid]
 n = nums[mid:]
merge_sort(m)
merge_sort(n)
i = j = k = 0
while i < len(m) and j < len(n):
  if m[i] < n[j]:
  nums[k] = m[i]
  i += 1
else:
  nums[k] = n[j]
  j += 1
  k += 1
while i < len(m):
  nums[k] = m[i]
  i += 1
  k += 1
while j < len(n):
  nums[k] = n[j]
  j += 1
  k += 1
nums = [38, 27, 43, 3, 9, 82, 10]
merge_sort(nums)
print(nums)


# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены
# только по окружности. Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
#Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло
# ai ягод.В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего
# модуля и нескольких собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, 
#собирает ягоды с этого куста и с двух соседних с ним. Напишите программу для нахождения максимального числа ягод, которое может
# собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

n = int(input("Введите количество кустов: "))
while n < 3:
     flag = False
list = []
for i in range(n): 
    n.append(int(input(f"Введите количество ягод на кусту {i + 1}: ")))
for i in range(len(n) - 1): 
    n.append(n[i - 1] + n[i] + n[i + 1]), n.append(n[-2] + n[-1] + n[0])
print(f"Максимального числа ягод за один сбор: {max(n.count)}")
